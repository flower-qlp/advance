享元模式
创建大量相同或者相似的对象
支持大量细粒度的对象的复用,通过共享已经存在的对象减少需要创建的数量


优点:相同的对象只需要存在一份
缺点:会提出对象中不相同的部分 提高系统的复杂度
读取享元对象外部的信息会耗时较多

举例:线程池中的线程

缓存的设计  redis  cash

抽象享元角色（Flyweight）：是所有的具体享元类的基类，为具体享元规范需要实现的公共接口，非享元的外部状态以参数的形式通过方法传入。
具体享元（Concrete Flyweight）角色：实现抽象享元角色中所规定的接口。
非享元（Unsharable Flyweight)角色：是不可以共享的外部状态，它以参数的形式注入具体享元的相关方法中。
享元工厂（Flyweight Factory）角色：负责创建和管理享元角色。当客户对象请求一个享元对象时，享元工厂检査系统中是否存在符合要求的享元对象，如果存在则提供给客户；如果不存在的话，则创建一个新的享元对象。